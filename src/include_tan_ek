c
c              declaration of local arrays to be allocated on the
c              stack for nonlinear stiffness generation. this
c              enables blocks of elements to be processed
c              in parallel.
c
      integer, parameter :: h_prec = selected_real_kind(12)
c
      type :: nonlinear_ek_work
c
       double precision, allocatable :: ce(:,:)                  ! mxvl,mxecor
       double precision, allocatable :: trnmte(:,:,:)            ! mxvl,mxedof,mxndof

       double precision, allocatable :: det_jac_block(:,:)      ! mxvl,mxgp
       double precision, allocatable :: shape(:,:)               ! mxndel,mxgp
       double precision, allocatable :: nxi(:,:)                 ! mxndel,mxgp
       double precision, allocatable :: neta(:,:)                ! mxndel,mxgp
       double precision, allocatable :: nzeta(:,:)               ! mxndel,mxgp
       double precision, allocatable :: gama_block(:,:,:,:)      ! mxvl,3,3,mxgp


       double precision, allocatable :: vol_block(:,:,:)         ! mxvl,8,3
       double precision, allocatable :: volume_block(:)          ! mxvl
       double precision, allocatable :: jac_block(:,:,:)         ! mxvl,3,3
       double precision, allocatable :: b_block(:,:,:)           ! mxvl,mxedof,nstr
       double precision, allocatable :: bt_block(:,:,:)          ! mxvl,nstr,mxedof
       double precision, allocatable :: bd_block(:,:,:)          ! mxvl,mxedof,nstr
       double precision, allocatable :: ue(:,:)                  ! mxvl,mxedof
       double precision, allocatable :: due(:,:)                 ! mxvl,mxedof
       double precision, allocatable :: urcs_blk_n1(:,:,:)       ! mxvl,nstrs,mxgp
       double precision, allocatable :: rot_blk_n1(:,:,:)        ! mxvl,9,mxgp
       double precision, allocatable :: elem_hist1(:,:,:)
       double precision, allocatable :: elem_hist(:,:,:)
       double precision, allocatable :: cohes_rot_block(:,:,:)   ! mxvl,3,3
c
       double precision, allocatable :: cep(:,:,:)               ! mxvl,nstr,nstr
       double precision, allocatable :: qn1(:,:,:)               ! mxvl,nstr,nstr
       double precision, allocatable :: cs_blk_n1(:,:)           ! mxvl,nstr
c
       double precision, allocatable :: ek_symm(:,:)             !span,nrow_ek       
       double precision, allocatable :: ek_full(:,:)             !span,totdof**2       
c
       double precision, allocatable :: weights(:)  ! mxgp on weights
c
!dir$ attributes align:64 :: ce
!dir$ attributes align:64 :: trnmte
!dir$ attributes align:64 :: det_jac_block
!dir$ attributes align:64 :: shape
!dir$ attributes align:64 :: nxi
!dir$ attributes align:64 :: neta
!dir$ attributes align:64 :: nzeta
!dir$ attributes align:64 :: gama_block
!dir$ attributes align:64 :: vol_block
!dir$ attributes align:64 :: volume_block
!dir$ attributes align:64 :: jac_block
!dir$ attributes align:64 :: b_block
!dir$ attributes align:64 :: bt_block
!dir$ attributes align:64 :: bd_block
!dir$ attributes align:64 :: ue
!dir$ attributes align:64 :: due
!dir$ attributes align:64 :: urcs_blk_n1
!dir$ attributes align:64 :: rot_blk_n1
!dir$ attributes align:64 :: elem_hist1
!dir$ attributes align:64 :: elem_hist
!dir$ attributes align:64 :: cohes_rot_block
!dir$ attributes align:64 :: cep
!dir$ attributes align:64 :: qn1
!dir$ attributes align:64 :: cs_blk_n1
!dir$ attributes align:64 :: ek_symm
!dir$ attributes align:64 :: ek_full
!dir$ attributes align:64 :: weights
c
       double precision :: beta_fact, eps_bbar, dt, time_n
       double precision, dimension(3) :: sv, lv, tv

       integer, allocatable :: cp(:), icp(:,:) !  mxedof; mxutsz,2

c
       integer :: felem, blk, elem_type, int_order, mat_type,
     &            matnum, num_enodes, num_enode_dof, totdof,
     &            num_int_points, span, utsz, iter, step,
     &            cohes_type, surface, hist_size_for_blk,
     &            umat_stress_type, cep_sym_size, num_threads,
     &            iout, macro_sz, cp_sz, inter_mat
c
       logical, allocatable :: trn_e_flags(:), trne(:,:)  ! mxvl; mxvl,mxndel
c
       logical :: geo_non_flg, bbar_flg, trn_e_block,
     &            first, qbar_flag, temperatures, temperatures_ref,
     &            temps_node_to_process,
     &            segmental, fgm_enode_props, is_cohes_elem,
     &            linear_displ_elem, adjust_const_elem,
     &            is_axisymm_elem, nuc_v(mxvl),
     &            killed_status_vec(mxvl), block_killed,
     &            is_umat, is_solid_matl, is_deform_plas,
     &            is_crys_pls, is_cohes_nonlocal, is_inter_dmg
c
c     Added stuff for CP, if any
c
      end type
c
      type (nonlinear_ek_work) :: local_work
