c
c              declaration of local arrays to be allocated on the
c              stack for strain-stress updating. this
c              enables blocks of elements to be processed
c              in parallel.
c
      integer, parameter :: h_prec = selected_real_kind(12)
c
c           Secondary type for CP crystal properties
c
      type :: crystal_properties
            double precision, dimension(6,max_slip_sys) :: ms
            double precision, dimension(3,max_slip_sys) :: qs
            double precision, dimension(3,max_slip_sys) :: ns
            double precision, dimension(6,6) :: init_elast_stiff
            double precision, dimension(3,3) :: rotation_g
            double precision, dimension(3) :: init_angles
            double precision :: rateN, tauHat_y, Go_y, burgers,
     &            p_v, q_v, p_y, q_y,
     &            boltzman, theta_o, eps_dot_o_y,
     &            mu_o, D_o, eps_dot_o_v,
     &            tau_a, t_o,  tauHat_v, Go_v,
     &            k_o, tau_y, tau_v, voche_m, u1, u2, u3, u4,
     &            u5, u6, u7, u8, u9, u10, iD_v
            double precision :: atol, atol1, rtol, rtol1,
     &                                xtol, xtol1
            integer :: st_it(3), tang_calc, miter, gpp, method
            integer :: nslip, h_type, num_hard, s_type, cnum
c              new variables to control local solvers inside mm10
            logical :: solver, strategy, gpall, alter_mode
      end type
c
      type :: nonlinear_sigeps_work
c
       type(crystal_properties), allocatable :: c_props(:,:)   ! mxvl,max_crystals
!dir$ attributes align:64 :: c_props
c
       double precision, allocatable :: ce_0(:,:)                ! (mxvl,mxecor)
       double precision, allocatable :: ce_n(:,:)                ! (mxvl,mxecor)
       double precision, allocatable :: ce_mid(:,:)              ! (mxvl,mxecor)
       double precision, allocatable :: ce_n1(:,:)               ! (mxvl,mxecor)
       double precision, allocatable :: trnmte(:,:,:)            ! (mxvl,mxedof,mxndof)
       double precision, allocatable :: det_j(:,:)               ! (mxvl,mxgp)
       double precision, allocatable :: det_j_mid(:,:)           ! (mxvl,mxgp)
       double precision, allocatable :: nxi(:,:)                 ! (mxndel,mxgp)
       double precision, allocatable :: neta(:,:)                ! (mxndel,mxgp)
       double precision, allocatable :: nzeta(:,:)               ! (mxndel,mxgp)
       double precision, allocatable :: gama(:,:,:,:)            ! (mxvl,3,3,mxgp)
       double precision, allocatable :: gama_mid(:,:,:,:)        ! (mxvl,3,3,mxgp)
       double precision, allocatable :: fn(:,:,:)                ! (mxvl,3,3)
       double precision, allocatable :: fn1(:,:,:)               ! (mxvl,3,3)
       double precision, allocatable :: dfn1(:)	              ! (mxvl)
       double precision, allocatable :: vol_block(:,:,:)         ! (mxvl,8,3) )
       double precision, allocatable :: volume_block(:)          ! (mxvl)
       double precision, allocatable :: volume_block_0(:)        ! (mxvl)
       double precision, allocatable :: volume_block_n(:)        ! (mxvl)
       double precision, allocatable :: volume_block_n1(:)       ! (mxvl)
       double precision, allocatable :: jac(:,:,:)               ! (mxvl,3,3)
       double precision, allocatable :: b(:,:,:)                 ! (mxvl,mxedof,nstr)
       double precision, allocatable :: ue(:,:)                  ! (mxvl,mxedof)
       double precision, allocatable :: due(:,:)                 ! (mxvl,mxedof)
       double precision, allocatable :: uenh(:,:)                ! (mxvl,mxedof)
       double precision, allocatable :: uen1(:,:)                ! (mxvl,mxedof)
       double precision, allocatable :: urcs_blk_n(:,:,:)        ! (mxvl,nstrs,mxgp)
       double precision, allocatable :: urcs_blk_n1(:,:,:)       ! (mxvl,nstrs,mxgp)
       double precision, allocatable :: rot_blk_n1(:,:,:)        ! (mxvl,9,mxgp)
       double precision, allocatable :: rtse(:,:,:)              ! (mxvl,nstr,mxgp)
       double precision, allocatable :: elem_hist1(:,:,:)
       double precision, allocatable :: elem_hist(:,:,:)
       double precision, allocatable :: ddtse(:,:,:)             ! (mxvl,nstr,mxgp)
       double precision, allocatable :: strain_n(:,:,:)          ! (mxvl,nstr,mxgp)
       double precision, allocatable :: dtemps_node_blk(:,:)     ! (mxvl,mxndel)
       double precision, allocatable :: temps_ref_node_blk(:,:)  ! (mxvl,mxndel)
       double precision, allocatable :: temps_node_blk(:,:)      ! (mxvl,mxndel)
       double precision, allocatable :: temps_node_ref_blk(:,:)  ! (mxvl,mxndel)
       double precision, allocatable :: cohes_temp_ref(:)        ! (mxvl)
       double precision, allocatable :: cohes_dtemp(:)           ! (mxvl)
       double precision, allocatable :: cohes_temp_n(:)          ! (mxvl)
       double precision, allocatable :: nu_vec(:)                ! (mxvl)
       double precision, allocatable :: beta_vec(:)              ! (mxvl)
       double precision, allocatable :: h_vec(:)                 ! (mxvl)
       double precision, allocatable :: e_vec(:)                 ! (mxvl)
       double precision, allocatable :: sigyld_vec(:)            ! (mxvl)
       double precision, allocatable :: alpha_vec(:,:)           ! (mxvl,6)
       double precision, allocatable :: e_vec_n(:)               ! (mxvl)
       double precision, allocatable :: nu_vec_n(:)              ! (mxvl)
       double precision, allocatable :: gp_sig_0_vec(:)          ! (mxvl)
       double precision, allocatable :: gp_sig_0_vec_n(:)        ! (mxvl)
       double precision, allocatable :: gp_h_u_vec(:)            ! (mxvl)
       double precision, allocatable :: gp_h_u_vec_n(:)          ! (mxvl)
       double precision, allocatable :: gp_beta_u_vec(:)         ! (mxvl)
       double precision, allocatable :: gp_beta_u_vec_n(:)       ! (mxvl)
       double precision, allocatable :: gp_delta_u_vec(:)        ! (mxvl)
       double precision, allocatable :: gp_delta_u_vec_n(:)      ! (mxvl)
       double precision, allocatable :: alpha_vec_n(:,:)         ! (mxvl,6)
       double precision, allocatable :: h_vec_n(:)               ! (mxvl)
       double precision, allocatable :: n_power_vec(:)           ! (mxvl)
       double precision, allocatable :: f0_vec(:)                ! (mxvl)
       double precision, allocatable :: eps_ref_vec(:)           ! (mxvl)
       double precision, allocatable :: m_power_vec(:)           ! (mxvl)
       double precision, allocatable :: q1_vec(:)                ! (mxvl)
       double precision, allocatable :: q2_vec(:)                ! (mxvl)
       double precision, allocatable :: q3_vec(:)                ! (mxvl)
       double precision, allocatable :: nuc_s_n_vec(:)           ! (mxvl)
       double precision, allocatable :: nuc_e_n_vec(:)           ! (mxvl)
       double precision, allocatable :: nuc_f_n_vec(:)           ! (mxvl)

c
       double precision, allocatable :: eps_curve(:)             ! (max_seg_points)
       double precision, allocatable :: shape(:,:)               ! (mxndel,mxgp)
       double precision, allocatable :: characteristic_length(:) ! (mxvl)
       double precision, allocatable :: intf_prp_block(:,:)      ! (mxvl,50)
       double precision, allocatable :: cohes_rot_block(:,:,:)   ! (mxvl,3,3)
       double precision, allocatable :: enode_mat_props(:,:,:)   ! (mxndel,mxvl,mxndpr)
       double precision, allocatable :: tan_e_vec(:)             ! (mxvl)
       double precision, allocatable :: fgm_flags(:,:)           ! (mxvl,mxndpr)
       double precision, allocatable :: mm05_props(:,:)          ! (mxvl,10)
       double precision, allocatable :: mm06_props(:,:)          ! (mxvl,10)
       double precision, allocatable :: mm07_props(:,:)          ! (mxvl,10)
       double precision, allocatable :: umat_props(:,:)          ! (mxvl,50)
c
       double precision, allocatable ::   ! nonlocal cohesive support
     &            top_surf_solid_stresses_n(:,:),             ! (mxvl,nstrs)
     &            bott_surf_solid_stresses_n(:,:),            ! (mxvl,nstrs)
     &            top_surf_solid_eps_n(:,:),                  ! (mxvl,nstr)
     &            bott_surf_solid_eps_n(:,:),                 ! (mxvl,nstr)
     &            nonlocal_stvals_bott_n(:,:),                ! (mxvl,nxx)
     &            nonlocal_stvals_top_n(:,:)                  ! (mxvl,nxx)
c
c              workspace to store block of solid matl. nonlocal values
c              while processing an integration point
c
       double precision, allocatable ::   ! nonlocal cohesive support
     &            nonlocal_state_blk(:,:)                     ! (mxvl,nxx)
c
      double precision, allocatable :: local_tol(:)           ! mxvl
c
c     Force these onto 64 byte boundaries
!dir$ attributes align:64 :: ce_0
!dir$ attributes align:64 :: ce_n
!dir$ attributes align:64 :: ce_mid
!dir$ attributes align:64 :: ce_n1
!dir$ attributes align:64 :: trnmte
!dir$ attributes align:64 :: det_j
!dir$ attributes align:64 :: det_j_mid
!dir$ attributes align:64 :: nxi
!dir$ attributes align:64 :: neta
!dir$ attributes align:64 :: nzeta
!dir$ attributes align:64 :: gama
!dir$ attributes align:64 :: gama_mid
!dir$ attributes align:64 :: fn
!dir$ attributes align:64 :: fn1
!dir$ attributes align:64 :: dfn1
!dir$ attributes align:64 :: vol_block
!dir$ attributes align:64 :: volume_block
!dir$ attributes align:64 :: volume_block_0
!dir$ attributes align:64 :: volume_block_n
!dir$ attributes align:64 :: volume_block_n1
!dir$ attributes align:64 :: jac
!dir$ attributes align:64 :: b
!dir$ attributes align:64 :: ue
!dir$ attributes align:64 :: due
!dir$ attributes align:64 :: uenh
!dir$ attributes align:64 :: uen1
!dir$ attributes align:64 :: urcs_blk_n
!dir$ attributes align:64 :: urcs_blk_n1
!dir$ attributes align:64 :: rot_blk_n1
!dir$ attributes align:64 :: rtse
!dir$ attributes align:64 :: elem_hist1
!dir$ attributes align:64 :: ddtse
!dir$ attributes align:64 :: strain_n
!dir$ attributes align:64 :: dtemps_node_blk
!dir$ attributes align:64 :: temps_ref_node_blk
!dir$ attributes align:64 :: temps_node_blk
!dir$ attributes align:64 :: temps_node_ref_blk
!dir$ attributes align:64 :: cohes_temp_ref
!dir$ attributes align:64 :: cohes_dtemp
!dir$ attributes align:64 :: cohes_temp_n
!dir$ attributes align:64 :: nu_vec
!dir$ attributes align:64 :: beta_vec
!dir$ attributes align:64 :: h_vec
!dir$ attributes align:64 :: e_vec
!dir$ attributes align:64 :: sigyld_vec
!dir$ attributes align:64 :: alpha_vec
!dir$ attributes align:64 :: e_vec_n
!dir$ attributes align:64 :: nu_vec_n
!dir$ attributes align:64 :: gp_sig_0_vec
!dir$ attributes align:64 :: gp_sig_0_vec_n
!dir$ attributes align:64 :: gp_h_u_vec
!dir$ attributes align:64 :: gp_h_u_vec_n
!dir$ attributes align:64 :: gp_beta_u_vec
!dir$ attributes align:64 :: gp_beta_u_vec_n
!dir$ attributes align:64 :: gp_delta_u_vec
!dir$ attributes align:64 :: gp_delta_u_vec_n
!dir$ attributes align:64 :: alpha_vec_n
!dir$ attributes align:64 :: h_vec_n
!dir$ attributes align:64 :: n_power_vec
!dir$ attributes align:64 :: f0_vec
!dir$ attributes align:64 :: eps_ref_vec
!dir$ attributes align:64 :: m_power_vec
!dir$ attributes align:64 :: q1_vec
!dir$ attributes align:64 :: q2_vec
!dir$ attributes align:64 :: q3_vec
!dir$ attributes align:64 :: nuc_s_n_vec
!dir$ attributes align:64 :: nuc_e_n_vec
!dir$ attributes align:64 :: nuc_f_n_vec
!dir$ attributes align:64 :: eps_curve
!dir$ attributes align:64 :: shape
!dir$ attributes align:64 :: characteristic_length
!dir$ attributes align:64 :: intf_prp_block
!dir$ attributes align:64 :: cohes_rot_block
!dir$ attributes align:64 :: enode_mat_props
!dir$ attributes align:64 :: tan_e_vec
!dir$ attributes align:64 :: fgm_flags
!dir$ attributes align:64 :: mm05_props
!dir$ attributes align:64 :: mm06_props
!dir$ attributes align:64 :: mm07_props
!dir$ attributes align:64 :: umat_props
!dir$ attributes align:64 :: top_surf_solid_stresses_n
!dir$ attributes align:64 :: bott_surf_solid_stresses_n
!dir$ attributes align:64 :: top_surf_solid_eps_n
!dir$ attributes align:64 :: bott_surf_solid_eps_n
!dir$ attributes align:64 :: nonlocal_stvals_bott_n
!dir$ attributes align:64 :: nonlocal_stvals_top_n
!dir$ attributes align:64 :: nonlocal_state_blk
!dir$ attributes align:64 :: local_tol
c 
c      MCM: not sure why this is still statically allocated
c
       double precision :: weights(mxgp)
       double precision, dimension(3) :: sv, lv, tv
c
       double precision :: dt, total_model_time, time_n, beta_fact,
     &   block_energy, eps_bbar, block_plastic_work, step_scale_fact,
     &   alpha_dmg, ls, ll, lt
c
c             where nxx above = nonlocal_shared_state_size
c
       integer, allocatable :: top_surf_solid_elements(:),    ! (mxvl)
     &                         bott_surf_solid_elements(:)
       integer, allocatable :: top_solid_matl(:),             ! (mxvl)
     &                         bott_solid_matl(:),
     &                         nstacks(:), nper(:)

      integer, allocatable :: ncrystals(:)                    ! mxvl
      integer, allocatable :: angle_type(:)                   ! mxvl
      integer, allocatable :: angle_convention(:)             ! mxvl

c
       integer :: felem, elem_type, matnum, int_order, mat_type,
     &            num_enodes, num_enode_dof, totdof,
     &            num_int_points, span, iter, step, gpn,
     &            number_points, cohes_type, curve_set_number,
     &            surface, hist_size_for_blk, iout, blk,
     &            umat_stress_type, cep_sym_size, num_threads,
     &            inter_mat, macro_sz, cp_sz, now_thread 
c
       logical, allocatable ::  trne(:,:)                     ! (mxvl,mxndel)
       logical, allocatable :: debug_flag(:)                  ! mxvl


       logical :: geo_non_flg, bbar_flg, trn_e_block,
     &            trn_e_flags(mxvl),
     &            first, material_cut_step, signal_flag,
     &            adaptive_flag, temperatures, lnelas_vec(mxvl),
     &            nuc_vec(mxvl), nonlinear_flag(mxvl), allow_cut,
     &            segmental, power_law, temps_node_to_process,
     &            temperatures_ref, fgm_enode_props, is_cohes_elem,
     &            linear_displ_elem, adjust_const_elem,
     &            is_axisymm_elem, killed_status_vec(mxvl),
     &            block_killed, is_umat, is_solid_matl, is_crys_pls,
     &            compute_f_bar, compute_f_n, is_cohes_nonlocal,
     &            is_inter_dmg, block_has_nonlocal_solids
c
      end type
c
      type (nonlinear_sigeps_work) :: local_work

